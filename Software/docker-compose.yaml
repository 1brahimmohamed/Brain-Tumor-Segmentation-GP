version: "3.8"
services:

#  frontend:
#    build: ./frontend
#    container_name: gp_frontend
#    ports:
#      - "5000:5000"
#    depends_on:
#      - api_gateway

  api_gateway:
    build: ./backend/ApiGateway
    container_name: gp_api_gateway
    ports:
      - "8000:8000"
    volumes:
      - ./backend/ApiGateway:/usr/src/app
    depends_on:
      - api_gateway_db
      - orthanc

  api_gateway_db:
    image: postgres:latest
    container_name: gp_gatway_db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./backend/ApiGateway/pgdata:/var/lib/postgresql/data
    restart: always

  orthanc:
    build: ./backend/Services/Orthanc
    container_name: gp_orthanc
    ports:
      - "8042:8042"
      - "4242:4242"
    tty: true
    volumes:
      - ./backend/Services/Orthanc/config/orthanc.json:/etc/orthanc/orthanc.json
      - ./backend/Services/Orthanc/config/dicomweb.json:/etc/orthanc/dicomweb.json
      - ./backend/Services/Orthanc/config/scripts:/usr/share/orthanc/scripts
      - ./backend/Services/Orthanc/storage:/var/lib/orthanc/db-v6

  rabbitmq:
    image: rabbitmq:3-management
    container_name: gp_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - ./backend/Services/RabbitMQ:/var/lib/rabbitmq

  inference:
    build: ./backend/Services/Inference
    container_name: gp_inference
    volumes:
      - ./backend/Services/Inference:/usr/src/app
    depends_on:
      - rabbitmq

  # nifti_pacs:
  #   build: ./backend/Services/NiftiPACS/NiftiPACS
  #   container_name: gp_nifti_pacs
  #   ports:
  #     - "8080:8080"
  #   volumes:
  #     - ./backend/Services/NiftiPACS/:/usr/src/app
  #   depends_on:
  #     - nifti_pacs_db

  # nifti_pacs_db:
  #   image: postgres:latest
  #   container_name: gp_nifti_pacs_db
  #   ports:
  #     - "5433:5432"
  #   environment:
  #     - POSTGRES_USER=nifti_user
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_DB=nifti
  #   volumes:
  #     - ./backend/Services/NiftiPACS/pgdata:/var/lib/postgresql/data
  #   restart: always
